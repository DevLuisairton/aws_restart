{"filter":false,"title":"calc_weight_json.py","tooltip":"/calc_weight_json.py","undoManager":{"mark":28,"position":28,"stack":[[{"start":{"row":0,"column":0},"end":{"row":65,"column":82},"action":"insert","lines":["# Import the custom module to handle JSON files","try:","    import json_file_handler  # Try to import the json_file_handler module","except ModuleNotFoundError:","    # Print an error message if the module is not found and exit the program","    print(\"Error: The 'json_file_handler' module is not found.\")","    exit()","","# Retrieve the JSON data from the insulin.json file","data = json_file_handler.read_json_file(","    \"insulin.json\"",")  # Call the read_json_file function","","# Check if data is retrieved successfully","if data:","    # Accessing specific insulin molecule sequences","    b_insulin = data[\"molecules\"][","        \"bInsulin\"","    ]  # Retrieve the bInsulin sequence from JSON data","    a_insulin = data[\"molecules\"][","        \"aInsulin\"","    ]  # Retrieve the aInsulin sequence from JSON data","    # Combine the b and a insulin sequences","    insulin = b_insulin + a_insulin  # Concatenate bInsulin and aInsulin sequences","","    # Accessing the actual molecular weight of insulin","    molecular_weight_insulin_actual = data[","        \"molecularWeightInsulinActual\"","    ]  # Retrieve the actual molecular weight","    print(\"bInsulin: \" + b_insulin)  # Print the bInsulin sequence","    print(\"aInsulin: \" + a_insulin)  # Print the aInsulin sequence","    print(","        \"molecularWeightInsulinActual: \" + str(molecular_weight_insulin_actual)","    )  # Print the actual molecular weight","","    # Getting a list of the amino acid weights","    aa_weights = data[\"weights\"]  # Retrieve the dictionary of amino acid weights","","    # Counting the number of each amino acid in the insulin sequence","    aa_count_insulin = {x: float(insulin.upper().count(x)) for x in aa_weights.keys()}","    # Create a dictionary where the keys are amino acids and the values are their counts in the insulin sequence","","    # Calculating the total molecular weight of insulin based on amino acid counts and weights","    molecular_weight_insulin = sum(","        {x: (aa_count_insulin[x] * aa_weights[x]) for x in aa_weights.keys()}.values()","    )","    # Multiply the count of each amino acid by its weight and sum the results to get the total molecular weight","","    # Printing the calculated rough molecular weight of insulin and percent error","    print(","        \"The rough molecular weight of insulin: \" + str(molecular_weight_insulin)","    )  # Print the calculated molecular weight","    print(","        \"Percent error: \"","        + str(","            (","                (molecular_weight_insulin - molecular_weight_insulin_actual)","                / molecular_weight_insulin_actual","            )","            * 100","        )","    )","    # Calculate the percent error between the actual and calculated molecular weights and print it","else:","    # Print an error message if data retrieval fails","    print(\"Error. Exiting program\")  # Print an error message and exit the program"],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":47},"action":"remove","lines":["# Import the custom module to handle JSON files"],"id":2},{"start":{"row":0,"column":0},"end":{"row":0,"column":61},"action":"insert","lines":["# Importe o módulo personalizado para lidar com arquivos JSON"]}],[{"start":{"row":2,"column":32},"end":{"row":2,"column":74},"action":"remove","lines":["Try to import the json_file_handler module"],"id":3},{"start":{"row":2,"column":31},"end":{"row":2,"column":32},"action":"remove","lines":[" "]},{"start":{"row":2,"column":30},"end":{"row":2,"column":31},"action":"remove","lines":["#"]}],[{"start":{"row":4,"column":4},"end":{"row":4,"column":76},"action":"remove","lines":["# Print an error message if the module is not found and exit the program"],"id":4},{"start":{"row":4,"column":4},"end":{"row":4,"column":83},"action":"insert","lines":["# Imprime uma mensagem de erro se o módulo não for encontrado e sai do programa"]}],[{"start":{"row":8,"column":0},"end":{"row":8,"column":51},"action":"remove","lines":["# Retrieve the JSON data from the insulin.json file"],"id":5},{"start":{"row":8,"column":0},"end":{"row":8,"column":48},"action":"insert","lines":["# Recupera os dados JSON do arquivo insulin.json"]}],[{"start":{"row":11,"column":4},"end":{"row":11,"column":37},"action":"remove","lines":[" Call the read_json_file function"],"id":6},{"start":{"row":11,"column":3},"end":{"row":11,"column":4},"action":"remove","lines":["#"]}],[{"start":{"row":13,"column":0},"end":{"row":13,"column":41},"action":"remove","lines":["# Check if data is retrieved successfully"],"id":7},{"start":{"row":13,"column":0},"end":{"row":13,"column":53},"action":"insert","lines":["# Verifique se os dados foram recuperados com sucesso"]}],[{"start":{"row":15,"column":4},"end":{"row":15,"column":51},"action":"remove","lines":["# Accessing specific insulin molecule sequences"],"id":8},{"start":{"row":15,"column":4},"end":{"row":15,"column":63},"action":"insert","lines":["# Acessando sequências específicas de moléculas de insulina"]}],[{"start":{"row":18,"column":7},"end":{"row":18,"column":54},"action":"remove","lines":["# Retrieve the bInsulin sequence from JSON data"],"id":9}],[{"start":{"row":21,"column":8},"end":{"row":21,"column":54},"action":"remove","lines":[" Retrieve the aInsulin sequence from JSON data"],"id":10},{"start":{"row":21,"column":7},"end":{"row":21,"column":8},"action":"remove","lines":["#"]}],[{"start":{"row":22,"column":3},"end":{"row":22,"column":43},"action":"remove","lines":[" # Combine the b and a insulin sequences"],"id":11},{"start":{"row":22,"column":3},"end":{"row":22,"column":44},"action":"insert","lines":["# Combine as sequências de insulina b e a"]}],[{"start":{"row":23,"column":37},"end":{"row":23,"column":82},"action":"remove","lines":["# Concatenate bInsulin and aInsulin sequences"],"id":12}],[{"start":{"row":25,"column":3},"end":{"row":25,"column":54},"action":"remove","lines":[" # Accessing the actual molecular weight of insulin"],"id":13},{"start":{"row":25,"column":3},"end":{"row":25,"column":48},"action":"insert","lines":["# Acessando o peso molecular real da insulina"]}],[{"start":{"row":28,"column":7},"end":{"row":28,"column":45},"action":"remove","lines":["# Retrieve the actual molecular weight"],"id":14}],[{"start":{"row":30,"column":38},"end":{"row":30,"column":66},"action":"remove","lines":[" Print the aInsulin sequence"],"id":15},{"start":{"row":30,"column":37},"end":{"row":30,"column":38},"action":"remove","lines":["#"]}],[{"start":{"row":29,"column":65},"end":{"row":29,"column":66},"action":"remove","lines":["e"],"id":16},{"start":{"row":29,"column":64},"end":{"row":29,"column":65},"action":"remove","lines":["c"]},{"start":{"row":29,"column":63},"end":{"row":29,"column":64},"action":"remove","lines":["n"]},{"start":{"row":29,"column":62},"end":{"row":29,"column":63},"action":"remove","lines":["e"]},{"start":{"row":29,"column":61},"end":{"row":29,"column":62},"action":"remove","lines":["u"]},{"start":{"row":29,"column":60},"end":{"row":29,"column":61},"action":"remove","lines":["q"]},{"start":{"row":29,"column":59},"end":{"row":29,"column":60},"action":"remove","lines":["e"]},{"start":{"row":29,"column":58},"end":{"row":29,"column":59},"action":"remove","lines":["s"]},{"start":{"row":29,"column":57},"end":{"row":29,"column":58},"action":"remove","lines":[" "]},{"start":{"row":29,"column":56},"end":{"row":29,"column":57},"action":"remove","lines":["n"]},{"start":{"row":29,"column":55},"end":{"row":29,"column":56},"action":"remove","lines":["i"]},{"start":{"row":29,"column":54},"end":{"row":29,"column":55},"action":"remove","lines":["l"]},{"start":{"row":29,"column":53},"end":{"row":29,"column":54},"action":"remove","lines":["u"]},{"start":{"row":29,"column":52},"end":{"row":29,"column":53},"action":"remove","lines":["s"]},{"start":{"row":29,"column":51},"end":{"row":29,"column":52},"action":"remove","lines":["n"]},{"start":{"row":29,"column":50},"end":{"row":29,"column":51},"action":"remove","lines":["I"]},{"start":{"row":29,"column":49},"end":{"row":29,"column":50},"action":"remove","lines":["b"]},{"start":{"row":29,"column":48},"end":{"row":29,"column":49},"action":"remove","lines":[" "]},{"start":{"row":29,"column":47},"end":{"row":29,"column":48},"action":"remove","lines":["e"]},{"start":{"row":29,"column":46},"end":{"row":29,"column":47},"action":"remove","lines":["h"]},{"start":{"row":29,"column":45},"end":{"row":29,"column":46},"action":"remove","lines":["t"]},{"start":{"row":29,"column":44},"end":{"row":29,"column":45},"action":"remove","lines":[" "]},{"start":{"row":29,"column":43},"end":{"row":29,"column":44},"action":"remove","lines":["t"]},{"start":{"row":29,"column":42},"end":{"row":29,"column":43},"action":"remove","lines":["n"]},{"start":{"row":29,"column":41},"end":{"row":29,"column":42},"action":"remove","lines":["i"]},{"start":{"row":29,"column":40},"end":{"row":29,"column":41},"action":"remove","lines":["r"]}],[{"start":{"row":29,"column":39},"end":{"row":29,"column":40},"action":"remove","lines":["P"],"id":17},{"start":{"row":29,"column":38},"end":{"row":29,"column":39},"action":"remove","lines":[" "]},{"start":{"row":29,"column":37},"end":{"row":29,"column":38},"action":"remove","lines":["#"]}],[{"start":{"row":33,"column":7},"end":{"row":33,"column":42},"action":"remove","lines":["# Print the actual molecular weight"],"id":18}],[{"start":{"row":35,"column":4},"end":{"row":35,"column":46},"action":"remove","lines":["# Getting a list of the amino acid weights"],"id":19},{"start":{"row":35,"column":4},"end":{"row":35,"column":48},"action":"insert","lines":["# Obtendo uma lista dos pesos de aminoácidos"]}],[{"start":{"row":36,"column":34},"end":{"row":36,"column":81},"action":"remove","lines":["# Retrieve the dictionary of amino acid weights"],"id":20},{"start":{"row":36,"column":34},"end":{"row":36,"column":81},"action":"insert","lines":["# Recupera o dicionário de pesos de aminoácidos"]}],[{"start":{"row":38,"column":4},"end":{"row":38,"column":68},"action":"remove","lines":["# Counting the number of each amino acid in the insulin sequence"],"id":21},{"start":{"row":38,"column":4},"end":{"row":38,"column":67},"action":"insert","lines":["# Contando o número de cada aminoácido na sequência da insulina"]}],[{"start":{"row":40,"column":4},"end":{"row":40,"column":112},"action":"remove","lines":["# Create a dictionary where the keys are amino acids and the values are their counts in the insulin sequence"],"id":22},{"start":{"row":40,"column":4},"end":{"row":40,"column":112},"action":"insert","lines":["# Crie um dicionário onde as chaves são aminoácidos e os valores são suas contagens na sequência da insulina"]}],[{"start":{"row":42,"column":4},"end":{"row":42,"column":94},"action":"remove","lines":["# Calculating the total molecular weight of insulin based on amino acid counts and weights"],"id":23},{"start":{"row":42,"column":4},"end":{"row":42,"column":92},"action":"insert","lines":["# Cálculo do peso molecular total da insulina com base na contagem e peso de aminoácidos"]}],[{"start":{"row":46,"column":4},"end":{"row":46,"column":111},"action":"remove","lines":["# Multiply the count of each amino acid by its weight and sum the results to get the total molecular weight"],"id":24},{"start":{"row":46,"column":4},"end":{"row":46,"column":116},"action":"insert","lines":["# Multiplique a contagem de cada aminoácido pelo seu peso e some os resultados para obter o peso molecular total"]}],[{"start":{"row":48,"column":4},"end":{"row":48,"column":81},"action":"remove","lines":["# Printing the calculated rough molecular weight of insulin and percent error"],"id":25},{"start":{"row":48,"column":4},"end":{"row":48,"column":86},"action":"insert","lines":["# Imprimindo o peso molecular aproximado calculado da insulina e o erro percentual"]}],[{"start":{"row":51,"column":7},"end":{"row":51,"column":46},"action":"remove","lines":["# Print the calculated molecular weight"],"id":26}],[{"start":{"row":62,"column":3},"end":{"row":62,"column":98},"action":"remove","lines":[" # Calculate the percent error between the actual and calculated molecular weights and print it"],"id":27},{"start":{"row":62,"column":3},"end":{"row":62,"column":88},"action":"insert","lines":["# Calcule o erro percentual entre os pesos moleculares reais e calculados e imprima-o"]}],[{"start":{"row":64,"column":4},"end":{"row":64,"column":52},"action":"remove","lines":["# Print an error message if data retrieval fails"],"id":28},{"start":{"row":64,"column":4},"end":{"row":64,"column":67},"action":"insert","lines":["# Imprime uma mensagem de erro se a recuperação de dados falhar"]}],[{"start":{"row":65,"column":37},"end":{"row":65,"column":82},"action":"remove","lines":["# Print an error message and exit the program"],"id":29}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":65,"column":37},"end":{"row":65,"column":37},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":50,"state":"start","mode":"ace/mode/python"}},"timestamp":1735256801279,"hash":"2f06061ae60dec519603e5d68c5fbdaf5bc582b1"}